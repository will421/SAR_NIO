
In this file, you will find the API of the NIO interface 
we want you to conform to. This is interface is intended
to guide you in the world of event-oriented programming.
It is **not** optional, you must use this API and implement
it on top of the Java NIO library.

The starting point is the class NioEngine. It allows 
to listen to incoming connections on ports as well as
to connect to remote ports. 

You will implement the abstract method mainloop() as the main loop
on your selector. You should capture your main thread in this never-ending
loop.

Notice the event-oriented style, with callbacks (AcceptCallback and
ConnectCallback). When a connection is established, it is wrapped by an object,
instance of the class NioChannel. Through an NioChannel, you
can send and receive messages.

Notice that you have the ability to have statistics
on your messaging middleware, see NioEngine::startEcho() method,
as long as you update the staticistic-related fields in the NioEngine class.  
 Test git







 